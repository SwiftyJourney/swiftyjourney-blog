---
import { Icon } from "astro-icon/components";

interface Props {
  type?: 'info' | 'warning' | 'success' | 'error' | 'tip';
  title?: string;
}

const { type = 'info', title } = Astro.props;

const getConfig = (type: string) => {
  switch (type) {
    case 'warning':
      return {
        icon: 'mdi:alert',
        bgColor: 'bg-amber-50 dark:bg-amber-950/20',
        borderColor: 'border-amber-200 dark:border-amber-800',
        iconColor: 'text-amber-600 dark:text-amber-500',
        titleColor: 'text-amber-900 dark:text-amber-200',
        textColor: 'text-amber-800 dark:text-amber-300',
      };
    case 'success':
      return {
        icon: 'mdi:check-circle',
        bgColor: 'bg-green-50 dark:bg-green-950/20',
        borderColor: 'border-green-200 dark:border-green-800',
        iconColor: 'text-green-600 dark:text-green-500',
        titleColor: 'text-green-900 dark:text-green-200',
        textColor: 'text-green-800 dark:text-green-300',
      };
    case 'error':
      return {
        icon: 'mdi:alert-circle',
        bgColor: 'bg-red-50 dark:bg-red-950/20',
        borderColor: 'border-red-200 dark:border-red-800',
        iconColor: 'text-red-600 dark:text-red-500',
        titleColor: 'text-red-900 dark:text-red-200',
        textColor: 'text-red-800 dark:text-red-300',
      };
    case 'tip':
      return {
        icon: 'mdi:lightbulb',
        bgColor: 'bg-orange-50 dark:bg-orange-950/20',
        borderColor: 'border-orange-200 dark:border-orange-800',
        iconColor: 'text-orange-600 dark:text-orange-500',
        titleColor: 'text-orange-900 dark:text-orange-200',
        textColor: 'text-orange-800 dark:text-orange-300',
      };
    default: // info
      return {
        icon: 'mdi:information',
        bgColor: 'bg-blue-50 dark:bg-blue-950/20',
        borderColor: 'border-blue-200 dark:border-blue-800',
        iconColor: 'text-blue-600 dark:text-blue-500',
        titleColor: 'text-blue-900 dark:text-blue-200',
        textColor: 'text-blue-800 dark:text-blue-300',
      };
  }
};

const config = getConfig(type);
---

<div class={`my-6 p-4 rounded-lg border-l-4 ${config.bgColor} ${config.borderColor}`}>
  <div class="flex gap-3">
    <Icon name={config.icon} class={`w-5 h-5 mt-0.5 flex-shrink-0 ${config.iconColor}`} />
    <div class="flex-1">
      {title && (
        <h4 class={`font-semibold mb-2 ${config.titleColor}`}>
          {title}
        </h4>
      )}
      <div class={`prose prose-sm max-w-none ${config.textColor}`}>
        <slot />
      </div>
    </div>
  </div>
</div>