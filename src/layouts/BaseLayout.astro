---
import "../styles/global.css";
import ThemeToggle from "../components/ThemeToggle.astro";
import LangToggle from "../components/LangToggle.astro";
import { Icon } from "astro-icon/components";

const SITE = "https://blog.swiftyjourney.com";

// Props por página
const {
  title = "Swifty Journey Blog",
  description = "Explorando iOS, Swift y SwiftUI a través de artículos y tutoriales",
  lang = "es",
  toEn: customToEn,
  toEs: customToEs,
} = Astro.props;

// Ruta actual (e.g. /en/blog)
const path = Astro.url.pathname || "/";

/** Diccionario de slugs por idioma */
const slugMap: Record<"en" | "es", Record<string, string>> = {
  en: {
    blog: "blog",
  },
  es: {
    blog: "blog",
  },
};

/** Traduce el primer segmento de una ruta al otro idioma */
function translateFirstSegment(
  currentLang: "en" | "es",
  otherLang: "en" | "es",
  pathname: string,
) {
  // quita el prefijo /en/ o /es/
  const bare = pathname.replace(/^\/(en|es)\//, "");
  const parts = bare.split("/").filter(Boolean);

  if (parts.length === 0) {
    return `/${otherLang}/`;
  }

  const first = parts[0];
  const mapped = (slugMap[currentLang] && slugMap[currentLang][first]) || first;

  const rebuilt = `/${otherLang}/${[mapped, ...parts.slice(1)].join("/")}`;
  return rebuilt.endsWith("/") ? rebuilt : rebuilt + "/";
}

const isES = path.startsWith("/es/") || (!path.startsWith("/en/") && !path.startsWith("/es/"));
const isEN = path.startsWith("/en/");
const currentLang = isES ? "es" : "en";
const otherLang = currentLang === "es" ? "en" : "es";

// URLs alternas correctas (usar custom si está disponible)
const toEn = customToEn || (isEN ? path : translateFirstSegment("es", "en", path));
const toEs = customToEs || (isES ? path : translateFirstSegment("en", "es", path));

// Canonical y hreflang
const canonical = new URL(path, SITE).toString();
const hrefEn = new URL(toEn, SITE).toString();
const hrefEs = new URL(toEs, SITE).toString();

// Home por idioma
const homeHref = lang === "en" ? "/en/" : "/";
---

<html lang={lang} class="min-h-full">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <title>{title}</title>
    <meta name="description" content={description} />

    <!-- Canonical + hreflang -->
    <link rel="canonical" href={canonical} />
    <link rel="alternate" href={hrefEn} hreflang="en" />
    <link rel="alternate" href={hrefEs} hreflang="es-mx" />
    <link rel="alternate" href={SITE + "/"} hreflang="x-default" />

    <link rel="icon" href="/favicon.svg" />

    <!-- Evita "flash" de tema -->
    <script is:inline>
      (function () {
        const key = "theme";
        const saved = localStorage.getItem(key);
        const prefersDark = window.matchMedia(
          "(prefers-color-scheme: dark)",
        ).matches;
        const useDark = (saved ?? (prefersDark ? "dark" : "light")) === "dark";
        if (useDark) document.documentElement.classList.add("dark");
      })();
    </script>

    <!-- Open Graph / Twitter básicos -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={canonical} />
    <meta property="og:type" content="website" />
    <meta name="twitter:card" content="summary_large_image" />
  </head>

  <body
    class="bg-white text-zinc-900 dark:bg-zinc-900 dark:text-zinc-100 antialiased"
  >
    <!-- Header sticky + blur -->
    <header
      class="sticky top-0 z-50 backdrop-blur supports-[backdrop-filter]:bg-white/70 dark:supports-[backdrop-filter]:bg-zinc-900/70"
    >
      <div
        class="max-w-6xl mx-auto px-4 py-3 md:py-4 flex items-center justify-between"
      >
        <a
          href={homeHref}
          class="flex items-center gap-2"
          aria-label="Swifty Journey Blog — Home"
        >
          <!-- Logo light/dark -->
          <img
            src="/logo-light.svg"
            alt="Swifty Journey"
            width="192"
            height="48"
            class="h-12 w-auto block dark:hidden"
          />
          <img
            src="/logo-dark.svg"
            alt="Swifty Journey"
            width="192"
            height="48"
            class="h-12 w-auto hidden dark:block"
          />
          <span class="text-sm text-zinc-600 dark:text-zinc-400 ml-2">Blog</span>
        </a>

        <nav class="flex items-center gap-2">
          <a
            href={lang === "en" ? "https://swiftyjourney.com/en/" : "https://swiftyjourney.com/es/"}
            class="px-3 py-1.5 text-sm text-zinc-700 dark:text-zinc-300 hover:text-zinc-900 dark:hover:text-zinc-100 hover:bg-zinc-100 dark:hover:bg-zinc-800 rounded-lg transition-colors"
          >
            ← {lang === "en" ? "Main Site" : "Sitio Principal"}
          </a>
          <LangToggle lang={lang} toEn={toEn} toEs={toEs} />
          <div class="ml-2">
            <ThemeToggle />
          </div>
        </nav>
      </div>
    </header>

    <main class="max-w-6xl mx-auto px-4">
      <slot />
    </main>

    <footer class="max-w-6xl mx-auto px-4 py-10 opacity-80">
      <div class="flex flex-col items-center gap-4">
        <div class="flex gap-4 text-2xl">
          <a
            href="https://github.com/swiftyjourney"
            target="_blank"
            rel="noopener me"
            class="hover:opacity-100 opacity-80"
          >
            <Icon name="mdi:github" />
          </a>
          <a
            href="https://x.com/jfdoradotr"
            target="_blank"
            rel="noopener me"
            class="hover:opacity-100 opacity-80"
          >
            <Icon name="mdi:twitter" />
          </a>
          <a
            href="https://linkedin.com/in/juanfranciscodoradotorres"
            target="_blank"
            rel="noopener me"
            class="hover:opacity-100 opacity-80"
          >
            <Icon name="mdi:linkedin" />
          </a>
        </div>
        <p class="text-sm">© {new Date().getFullYear()} Swifty Journey</p>
      </div>
    </footer>
  </body>
</html>